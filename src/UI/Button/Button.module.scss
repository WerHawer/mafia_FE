@use "sass:color";
@use "../../styles/theme.scss";

.button {
  display: block;
  text-align: center;
  border-radius: theme.$border-radius-big;
  transition: background-color, opacity;
  transition-duration: 250ms;
  text-wrap: nowrap;
  cursor: pointer;

  &.fullWidth {
    width: 100%;
  }

  &.small {
    padding: 0.8rem 0.8rem;
    font-size: 1.4rem;
    min-width: max-content;
  }

  &.ms {
    padding: 1rem 1.2rem;
    font-size: 1.6rem;
    min-width: max-content;
  }

  &.medium {
    padding: 1.4rem 1.6rem;
    font-size: 1.9rem;
    min-width: 250px;
  }

  &.large {
    padding: 2rem 2.4rem;
    font-size: 2.2rem;
    min-width: 300px;
  }

  &.uppercase {
    text-transform: uppercase;
  }

  &.rounded {
    border-radius: 50%;

    &.small {
      padding: 0.4rem;
    }

    &.ms {
      padding: 0.6rem;
    }

    &.medium {
      padding: 0.8rem;
    }

    &.large {
      padding: 1rem;
    }
  }

  &.primary {
    background-color: theme.$color-accent-primary;
    color: theme.$color-dark-primary;

    &:hover,
    &:focus {
      background-color: color.adjust(
        theme.$color-accent-primary,
        $lightness: 15%
      );
    }

    &:disabled {
      background-color: theme.$color-accent-primary;
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  &.secondary {
    background:
      linear-gradient(theme.$color-dark-primary, theme.$color-dark-primary)
        padding-box,
      linear-gradient(
          to right,
          theme.$color-accent-primary,
          theme.$color-light-primary
        )
        border-box;
    color: theme.$color-accent-primary;
    border: 1px solid transparent;

    &:hover,
    &:focus {
      background:
        linear-gradient(
            color.adjust(theme.$color-dark-primary, $lightness: 10%),
            color.adjust(theme.$color-dark-primary, $lightness: 10%)
          )
          padding-box,
        linear-gradient(
            to right,
            theme.$color-accent-primary,
            theme.$color-light-primary
          )
          border-box;
    }

    &:disabled {
      background-color: theme.$color-accent-secondary;
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  &.tertiary {
    background-color: transparent;
    color: inherit;

    &:disabled {
      background-color: theme.$color-accent-tertiary;
      opacity: 0.5;
      cursor: not-allowed;
    }

    &.small,
    &.medium,
    &.large,
    &.ms {
      min-width: 0;
    }
  }

  &.success {
    background-color: theme.$color-success;
    color: theme.$color-text-tertiary;

    &:hover {
      background-color: color.adjust(theme.$color-success, $lightness: 10%);
    }

    &:disabled {
      background-color: theme.$color-success;
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  &.outline {
    background-color: transparent;
    border: 2px solid theme.$color-accent-primary;
    color: theme.$color-accent-primary;

    &:hover:not(:disabled) {
      background-color: rgba(theme.$color-accent-primary, 0.1);
    }

    &:disabled {
      border-color: theme.$color-button-inactive;
      color: theme.$color-button-inactive;
      background-color: transparent;
    }
  }
}
